{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "yellow",
    "glyph" : "magic"
  },
  "name" : "网上国网",
  "script" : "\/\/ Variables used by Scriptable.\n\/\/ These must be at the very top of the file. Do not edit.\n\/\/ icon-color: yellow; icon-glyph: magic;\nconst icons = {\n\tcolor: Color.dynamic(Color.black(), new Color(\"#CCCCD1\")),\n\tlargeSize: new Size(18, 18),\n\tmediumSize: new Size(14, 14),\n\tsmallSize: new Size(11, 11),\n\ttoFont(size) {\n\t\treturn this[size].width;\n\t},\n\n\t游戏: \"gamecontroller\",\n\t闪电: \"bolt.horizontal.circle\",\n\t家: \"house.fill\",\n\t眼睛: \"eye.fill\",\n\t货币: \"chineseyuanrenminbisign.circle\",\n\t刷新: \"arrow.triangle.2.circlepath\",\n\tgetImage(name, size = 18) {\n\t\tconst sfs = SFSymbol.named(this[name]);\n\t\tsfs.applyFont(Font.systemFont(size));\n\t\treturn sfs.image;\n\t},\n};\n\nconst BillStyle = {\n\tcolor: icons.color,\n\tlargeFont: Font.boldSystemFont(icons.toFont(\"largeSize\")),\n\tmediumFont: Font.boldSystemFont(icons.toFont(\"mediumSize\")),\n\tsmallFont: Font.regularSystemFont(icons.toFont(\"smallSize\")),\n};\n\nObject.prototype.myProxy = function (obj) {\n\tReflect.ownKeys(obj).forEach((key) => {\n\t\tconst value = obj[key];\n\n\t\tif (typeof value === \"function\") {\n\t\t\tvalue(this);\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this[key] !== \"function\") {\n\t\t\tthis[key] = value;\n\t\t\treturn;\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst [arg, cbObj] = value;\n\t\t\tthis[key](arg).myProxy({ ...cbObj });\n\t\t} else {\n\t\t\tthis[key](value);\n\t\t}\n\t});\n\n\treturn this;\n};\n\n\/**\n * @param {object} options\n * @param {string} [options.title]\n * @param {string} [options.message]\n * @param {Array<{ title: string; [key: string]: any }>} options.options\n * @param {boolean} [options.showCancel = true]\n * @param {string} [options.cancelText = 'Cancel']\n *\/\nconst presentSheet = async (options) => {\n\toptions = {\n\t\tshowCancel: true,\n\t\tcancelText: \"Cancel\",\n\t\t...options,\n\t};\n\tconst alert = new Alert();\n\tif (options.title) {\n\t\talert.title = options.title;\n\t}\n\tif (options.message) {\n\t\talert.message = options.message;\n\t}\n\tif (!options.options) {\n\t\tthrow new Error(\n\t\t\t'The \"options\" property of the parameter cannot be empty'\n\t\t);\n\t}\n\tfor (const option of options.options) {\n\t\talert.addAction(option.title);\n\t}\n\tif (options.showCancel) {\n\t\talert.addCancelAction(options.cancelText);\n\t}\n\tconst value = await alert.presentSheet();\n\treturn {\n\t\tvalue,\n\t\toption: options.options[value],\n\t};\n};\n\n\/**\n * Thanks @mzeryck\n *\n * @param {number} [height] The screen height measured in pixels\n *\/\nconst phoneSize = (height) => {\n\tconst phones = {\n\t\t\/** 14 Pro Max *\/\n\t\t2796: {\n\t\t\tsmall: 510,\n\t\t\tmedium: 1092,\n\t\t\tlarge: 1146,\n\t\t\tleft: 99,\n\t\t\tright: 681,\n\t\t\ttop: 282,\n\t\t\tmiddle: 918,\n\t\t\tbottom: 1554,\n\t\t},\n\t\t\/** 14 Pro *\/\n\t\t2556: {\n\t\t\tsmall: 474,\n\t\t\tmedium: 1014,\n\t\t\tlarge: 1062,\n\t\t\tleft: 82,\n\t\t\tright: 622,\n\t\t\ttop: 270,\n\t\t\tmiddle: 858,\n\t\t\tbottom: 1446,\n\t\t},\n\t\t\/** 13 Pro Max, 12 Pro Max *\/\n\t\t2778: {\n\t\t\tsmall: 510,\n\t\t\tmedium: 1092,\n\t\t\tlarge: 1146,\n\t\t\tleft: 96,\n\t\t\tright: 678,\n\t\t\ttop: 246,\n\t\t\tmiddle: 882,\n\t\t\tbottom: 1518,\n\t\t},\n\t\t\/** 13, 13 Pro, 12, 12 Pro *\/\n\t\t2532: {\n\t\t\tsmall: 474,\n\t\t\tmedium: 1014,\n\t\t\tlarge: 1062,\n\t\t\tleft: 78,\n\t\t\tright: 618,\n\t\t\ttop: 231,\n\t\t\tmiddle: 819,\n\t\t\tbottom: 1407,\n\t\t},\n\t\t\/** 11 Pro Max, XS Max *\/\n\t\t2688: {\n\t\t\tsmall: 507,\n\t\t\tmedium: 1080,\n\t\t\tlarge: 1137,\n\t\t\tleft: 81,\n\t\t\tright: 654,\n\t\t\ttop: 228,\n\t\t\tmiddle: 858,\n\t\t\tbottom: 1488,\n\t\t},\n\t\t\/** 11, XR *\/\n\t\t1792: {\n\t\t\tsmall: 338,\n\t\t\tmedium: 720,\n\t\t\tlarge: 758,\n\t\t\tleft: 55,\n\t\t\tright: 437,\n\t\t\ttop: 159,\n\t\t\tmiddle: 579,\n\t\t\tbottom: 999,\n\t\t},\n\t\t\/** 13 mini, 12 mini \/ 11 Pro, XS, X *\/\n\t\t2436: {\n\t\t\tsmall: 465,\n\t\t\tmedium: 987,\n\t\t\tlarge: 1035,\n\t\t\tx: {\n\t\t\t\tleft: 69,\n\t\t\t\tright: 591,\n\t\t\t\ttop: 213,\n\t\t\t\tmiddle: 783,\n\t\t\t\tbottom: 1353,\n\t\t\t},\n\t\t\tmini: {\n\t\t\t\tleft: 69,\n\t\t\t\tright: 591,\n\t\t\t\ttop: 231,\n\t\t\t\tmiddle: 801,\n\t\t\t\tbottom: 1371,\n\t\t\t},\n\t\t},\n\t\t\/** Plus phones *\/\n\t\t2208: {\n\t\t\tsmall: 471,\n\t\t\tmedium: 1044,\n\t\t\tlarge: 1071,\n\t\t\tleft: 99,\n\t\t\tright: 672,\n\t\t\ttop: 114,\n\t\t\tmiddle: 696,\n\t\t\tbottom: 1278,\n\t\t},\n\t\t\/** SE2 and 6\/6S\/7\/8 *\/\n\t\t1334: {\n\t\t\tsmall: 296,\n\t\t\tmedium: 642,\n\t\t\tlarge: 648,\n\t\t\tleft: 54,\n\t\t\tright: 400,\n\t\t\ttop: 60,\n\t\t\tmiddle: 412,\n\t\t\tbottom: 764,\n\t\t},\n\t\t\/** SE1 *\/\n\t\t1136: {\n\t\t\tsmall: 282,\n\t\t\tmedium: 584,\n\t\t\tlarge: 622,\n\t\t\tleft: 30,\n\t\t\tright: 332,\n\t\t\ttop: 59,\n\t\t\tmiddle: 399,\n\t\t\tbottom: 399,\n\t\t},\n\t\t\/** 11 and XR in Display Zoom mode *\/\n\t\t1624: {\n\t\t\tsmall: 310,\n\t\t\tmedium: 658,\n\t\t\tlarge: 690,\n\t\t\tleft: 46,\n\t\t\tright: 394,\n\t\t\ttop: 142,\n\t\t\tmiddle: 522,\n\t\t\tbottom: 902,\n\t\t},\n\t\t\/** Plus in Display Zoom mode *\/\n\t\t2001: {\n\t\t\tsmall: 444,\n\t\t\tmedium: 963,\n\t\t\tlarge: 972,\n\t\t\tleft: 81,\n\t\t\tright: 600,\n\t\t\ttop: 90,\n\t\t\tmiddle: 618,\n\t\t\tbottom: 1146,\n\t\t},\n\t};\n\theight = height || Device.screenResolution().height;\n\tconst scale = Device.screenScale();\n\n\tconst phone = phones[height];\n\tif (phone) {\n\t\treturn phone;\n\t}\n\n\tif (config.runsInWidget) {\n\t\tconst pc = {\n\t\t\tsmall: 164 * scale,\n\t\t\tmedium: 344 * scale,\n\t\t\tlarge: 354 * scale,\n\t\t};\n\t\treturn pc;\n\t}\n\n\t\/\/ in app screen fixed 375x812 pt\n\treturn {\n\t\tsmall: 155 * scale,\n\t\tmedium: 329 * scale,\n\t\tlarge: 345 * scale,\n\t};\n};\n\n\/**\n * 一个基于 Proxy 的 请求对象，用于以一致的接口进行请求。\n *\n * 用法示例:\n * const {body,headers,statusCode} = await http.get(url,timeout).json();\n *\n * const response = await http.post({ url, body, timeout}).str();\n *\n * @param {string} method - HTTP 方法（例如 'get', 'post', 'put', 'delete'）。\n * @param {Object} opts - 请求的选项。\n * @param {string} url - 请求的 URL。\n * @param {number} [timeout=5] - 请求的超时时间，默认为 5 秒。\n *\n * @returns {Object} - 包含三个方法（str, json, imsg）的对象，用于发送请求。\n *   - str: 发送请求并以字符串形式返回响应体。\n *   - json: 发送请求并以 JSON 形式返回响应体。\n *   - image: 发送请求并以 图片对象形式返回响应。\n *\/\nconst http = new Proxy(\n\t{},\n\t{\n\t\tget:\n\t\t\t(_, method) =>\n\t\t\t(opts, timeout = 5) => {\n\t\t\t\tif (!opts.url) opts = { url: opts };\n\t\t\t\topts.timeoutInterval = opts.timeout ?? timeout;\n\n\t\t\t\tconst request = Object.assign(\n\t\t\t\t\tnew Request(opts.url),\n\t\t\t\t\t{ method },\n\t\t\t\t\topts\n\t\t\t\t);\n\n\t\t\t\tconst send = async (loader) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst body = await request[loader]();\n\t\t\t\t\t\tconst { headers, statusCode } = request.response;\n\t\t\t\t\t\tif (statusCode !== 200)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Request failed with status code ${statusCode}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\treturn { body, headers, statusCode };\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Failed to load ${opts.url}: ${error.toString()}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tstr: () => send(\"loadString\"),\n\t\t\t\t\tjson: () => send(\"loadJSON\"),\n\t\t\t\t\timage: () => send(\"loadImage\"),\n\t\t\t\t\tdata: () => send(\"load\"),\n\t\t\t\t};\n\t\t\t},\n\t}\n);\n\n\/**\n * @param {...string} paths\n *\/\nconst joinPath = (...paths) => {\n\tconst fm = FileManager.local();\n\treturn paths.reduce((prev, curr) => {\n\t\treturn fm.joinPath(prev, curr);\n\t}, \"\");\n};\n\n\/**\n * 规范使用 FileManager。每个脚本使用独立文件夹\n *\n * 注意：桌面组件无法写入 cacheDirectory 和 temporaryDirectory\n * @param {object} options\n * @param { boolean| string} [options.useICloud]\n * @param {boolean| string} [options.basePath]\n *\/\n\nconst useFileManager = (options = {}) => {\n\tlet { useICloud, basePath } = options;\n\n\tif (typeof useICloud === \"string\") basePath = useICloud;\n\n\tconst fm = useICloud ? FileManager.iCloud() : FileManager.local();\n\tconst paths = [fm.documentsDirectory(), Script.name()];\n\tif (basePath && typeof basePath === \"string\") {\n\t\tpaths.push(basePath);\n\t}\n\tconst cacheDirectory = joinPath(...paths);\n\n\t\/**\n\t * 删除路径末尾所有的 \/\n\t * @param {string} filePath\n\t *\/\n\tconst safePath = (filePath) => {\n\t\treturn fm.joinPath(cacheDirectory, filePath).replace(\/\\\/+$\/, \"\");\n\t};\n\n\t\/**\n\t * 如果上级文件夹不存在，则先创建文件夹\n\t * @param {string} filePath\n\t *\/\n\tconst preWrite = (filePath) => {\n\t\tconst i = filePath.lastIndexOf(\"\/\");\n\t\tconst directory = filePath.substring(0, i);\n\t\tif (!fm.fileExists(directory)) {\n\t\t\tfm.createDirectory(directory, true);\n\t\t}\n\t};\n\n\t\/**\n\t * @param {string} filePath\n\t * @param {string} stringData\n\t *\/\n\n\tconst writeString = (filePath, content) => {\n\t\tconst nextPath = safePath(filePath);\n\t\tpreWrite(nextPath);\n\t\tfm.writeString(nextPath, content);\n\t};\n\n\t\/**\n\t * @param {string} filePath\n\t * @param {object} jsonData\n\t *\/\n\tconst writeJSON = (filePath, jsonData) =>\n\t\twriteString(filePath, JSON.stringify(jsonData));\n\n\t\/**\n\t * @param {string} filePath\n\t * @param {Image} image\n\t *\/\n\tconst writeImage = (filePath, image) => {\n\t\tconst nextPath = safePath(filePath);\n\t\tpreWrite(nextPath);\n\t\treturn fm.writeImage(nextPath, image);\n\t};\n\n\t\/**\n\t * @param {string} filePath\n\t * @param {*} Data - 数据对象\n\t *\/\n\tconst writeData = (filePath, Data) => {\n\t\tconst nextPath = safePath(filePath);\n\t\tpreWrite(nextPath);\n\t\treturn fm.write(nextPath, Data);\n\t};\n\n\t\/**\n\t * 文件不存在时返回 null\n\t * @param {string} filePath\n\t * @returns {string|null}\n\t *\/\n\tconst readString = (filePath, bool) => {\n\t\tconst fullPath = fm.joinPath(cacheDirectory, filePath);\n\t\tif (fm.fileExists(fullPath)) {\n\t\t\tif (bool) return fullPath;\n\t\t\treturn fm.readString(fm.joinPath(cacheDirectory, filePath));\n\t\t}\n\t\treturn null;\n\t};\n\n\t\/**\n\t * @param {string} filePath\n\t *\/\n\tconst readJSON = (filePath) => JSON.parse(readString(filePath));\n\n\t\/**\n\t * @param {string} filePath\n\t *\/\n\tconst readImage = (filePath, bool) => {\n\t\tconst fullPath = fm.joinPath(cacheDirectory, filePath);\n\n\t\tif (bool) return fullPath;\n\t\treturn fm.readImage(fullPath);\n\t};\n\n\t\/**\n\t * @param {string} filePath\n\t * @returns {any}\n\t *\n\t *\/\n\tconst readData = (filePath, bool) => {\n\t\tconst fullPath = fm.joinPath(cacheDirectory, filePath);\n\t\tif (fm.fileExists(fullPath)) {\n\t\t\tif (bool) return fullPath;\n\t\t\treturn Data.fromFile(fullPath);\n\t\t}\n\t\treturn null;\n\t};\n\n\treturn {\n\t\tfm,\n\t\tcacheDirectory,\n\t\twriteString,\n\t\twriteJSON,\n\t\twriteImage,\n\t\twriteData,\n\t\treadString,\n\t\treadJSON,\n\t\treadImage,\n\t\treadData,\n\t};\n};\n\nconst addTitleName = (topLeft) => {\n\t\/\/计算宽度\n\tconst body = BillData.find((i) => i.title === \"用户\").value;\n\tconst len = body.includes(\"*\") ? body.length + 0.5 : body.length + 1;\n\n\ttopLeft.addStack().myProxy({\n\t\tcenterAlignContent: true,\n\t\tsize: new Size(len * 15, topLeft.size.height \/ 4),\n\t\t\/\/backgroundColor: Color.blue(),\n\t\taddImage: [\n\t\t\ticons.getImage(\"家\"),\n\t\t\t{\n\t\t\t\ttintColor: icons.color,\n\t\t\t\timageSize: icons.largeSize,\n\t\t\t},\n\t\t],\n\n   addSpacer: 5,\n\n\t\taddText: [\n\t\t\tbody,\n\t\t\t{\n\t\t\t\ttextColor: BillStyle.color,\n\t\t\t\tfont: BillStyle.largeFont,\n\t\t\t\turl: \"scriptable:\/\/\/run?scriptName=国上国网&event=switchAcc\",\n\t\t\t},\n\t\t],\n\t});\n};\n\nconst addIcon = (topLeft, newWidth, newheight) => {\n\ttopLeft\n\t\t.addStack()\n\t\t.myProxy({\n\t\t\tcenterAlignContent: true,\n\t\t\taddSpacer: 5,\n\t\t\tsize: new Size(\n\t\t\t\tnewWidth ?? topLeft.size.width * 0.37,\n\t\t\t\tnewheight ?? topLeft.size.height \/ 4\n\t\t\t),\n\t\t\t\/\/backgroundColor: Color.red(),\n\t\t\taddText: [\n\t\t\t\tisOverdue ? \"欠费\" :\"余额\",\n\t\t\t\t{\n\t\t\t\t\ttextColor: BillStyle.color,\n\t\t\t\t\tfont: BillStyle.mediumFont,\n\t\t\t\t},\n\t\t\t],\n\t\t\taddImage: [\n\t\t\t\ticons.getImage(\"闪电\"),\n\t\t\t\t{\n\t\t\t\t\ttintColor: icons.color,\n\t\t\t\t\timageSize: icons.smallSize,\n\t\t\t\t\timageOpacity: 0.5,\n\t\t\t\t},\n\t\t\t],\n\t\t})\n\t\t.myProxy({\n\t\t\taddSpacer: 5,\n\t\t\taddText: [\n\t\t\t\t\"|\",\n\t\t\t\t{\n\t\t\t\t\ttextColor: BillStyle.color,\n\t\t\t\t\tfont: BillStyle.smallFont,\n\t\t\t\t},\n\t\t\t],\n\t\t})\n\t\t.myProxy({\n\t\t\taddSpacer: 5,\n\t\t\taddImage: [\n\t\t\t\ticons.getImage(\"眼睛\"),\n\t\t\t\t{\n\t\t\t\t\ttintColor: icons.color,\n\t\t\t\t\timageSize: icons.smallSize,\n\t\t\t\t\timageOpacity: 0.5,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n};\n\nconst addBalance = (topLeft) => {\n\tconst body = BillData.find((i) => i.title === \"余额\").value;\n\tlet [int, decimal] = (+body).toFixed(2).split(\".\");\n\tint = isOverdue ? \"-\" + int : int;\n\tconst width = topLeft.size.width;\n\tconst height = topLeft.size.height \/ 4;\n\n\tlet w = 0;\n\tconst w_Init = 0;\n\n\tconst ctx = new DrawContext();\n\tctx.size = new Size(width, height);\n\tctx.opaque = false;\n\tctx.respectScreenScale = true;\n\n\t\/\/27号字体的宽度\n\tlet fontWidthList = {\n\t\t\"-\":13,\n\t\t0: 18,\n\t\t1: 13,\n\t\t2: 17,\n\t\t3: 17,\n\t\t4: 18,\n\t\t5: 17,\n\t\t6: 18,\n\t\t7: 16,\n\t\t8: 18,\n\t\t9: 18,\n\t};\n\n\tw += w_Init;\n  w = w + 10\n\tctx.setFont(Font.boldSystemFont(27));\n\tctx.drawText(int, new Point(w, -2));\n\n\tint.split(\"\").forEach((n) => (w += fontWidthList[n]));\n\n\tctx.setFont(Font.boldSystemFont(17));\n\tctx.drawTextInRect(\".\" + decimal, new Rect(w, 7, width, height));\n\n\tdecimal.split(\"\").forEach((n) => (w += n == 1 ? 12 : 14));\n\n\tctx.drawTextInRect(\"元\", new Rect(w, 6, width, height));\n\n\tw += 15 + 5;\n\tctx.drawImageAtPoint(icons.getImage(\"刷新\", 12), new Point(w, 11));\n\n\ttopLeft.addStack().myProxy({\n\t\tsize: new Size(width, height),\n\t\t\/\/backgroundColor: Color.green(),\n\n\t\taddImage: [\n\t\t\tctx.getImage(),\n\t\t\t{\n\t\t\t\ttintColor: isOverdue ? new Color(\"#B32E4E\") : icons.color,\n\t\t\t},\n\t\t],\n\t});\n};\n\nconst addDeadline = (topLeft) => {\n\tconst body = \"截至\" + BillData.find((i) => i.title === \"截至日期\").value;\n\tconst width = topLeft.size.width;\n\tconst height = topLeft.size.height \/ 4;\n\n\tconst ctx = new DrawContext();\n\tctx.size = new Size(width, height);\n\tctx.opaque = false;\n\tctx.respectScreenScale = true;\n\tctx.setFont(BillStyle.mediumFont);\n\tctx.drawText(body, new Point(0, 9));\n\n\ttopLeft.addStack().myProxy({\n\t\tcenterAlignContent: true,\n\t\tsize: new Size(width, height),\n\t\t\/\/backgroundColor: Color.black(),\n   addSpacer: 10,\n\t addImage: [\n\t\t\tctx.getImage(),\n\t\t\t{\n\t\t\t\ttintColor: icons.color,\n\t\t\t},\n\t\t],\n\t});\n};\n\nconst containerTopLeft = (containerTop) =>\n\tcontainerTop.addStack().myProxy({\n\t\tlayoutVertically: true,\n\t\tsize: new Size(containerTop.size.width * 0.6, containerTop.size.height),\n\t\t\/\/backgroundColor: Color.brown(),\n\n\t\taddTitleName,\n\t\taddIcon,\n\t\taddBalance,\n\t\taddDeadline,\n\t});\n\nconst setDate = (w, options = {}) =>\n\tw.myProxy({\n\t\taddDate: [\n\t\t\tnew Date(),\n\t\t\t{\n\t\t\t\tfont: BillStyle.smallFont,\n\t\t\t\tapplyTimeStyle: true,\n\t\t\t\ttextColor: icons.color,\n\t\t\t\ttextOpacity: 0.8,\n\t\t\t\t...options,\n\t\t\t},\n\t\t],\n\t});\n\nconst containerTopRight = (containerTop) =>\n\tcontainerTop.addStack().myProxy({\n\t\tlayoutVertically: true,\n\t\tsize: new Size(containerTop.size.width * 0.4, containerTop.size.height),\n\t\t\/\/backgroundColor: Color.red(),\n\t\taddSpacer: containerTop.size.height * 0.1,\n\t\tupdateTime(TopRight) {\n\t\t\tTopRight.addStack().myProxy({\n\t\t\t\tbottomAlignContent: true,\n\t\t\t\tsize: new Size(\n\t\t\t\t\tTopRight.size.width,\n\t\t\t\t\tTopRight.size.height * 0.25\n\t\t\t\t),\n\t\t\t\t\/\/backgroundColor: Color.gray(),\n\t\t\t\taddSpacer: 75,\n\t\t\t\tsetDate,\n\t\t\t});\n\t\t},\n\t});\n\nconst createContainerTop = (container) =>\n\tcontainer.addStack().myProxy({\n\t\ttopAlignContent: true,\n\t\tsize: new Size(container.size.width, container.size.height * 0.7),\n\t\t\/\/backgroundColor: Color.gray(),\n\n\t\tcontainerTopLeft,\n\t\tcontainerTopRight,\n\t});\n\nconst createContainerBottom = (container) =>\n\tcontainer.addStack().myProxy({\n\t\tcenterAlignContent: true,\n\t\tsize: new Size(container.size.width, container.size.height * 0.3),\n\n\t\tpopulateBottomContainer(containerbottom) {\n\t\t\tconst newData = BillData.filter(\n\t\t\t\t(i) => !\/用户|余额|截至日期|是否欠费\/.test(i.title)\n\t\t\t);\n\t\t\tnewData.forEach((item) => {\n\t\t\t\tconst col = containerbottom.addStack().myProxy({\n\t\t\t\t\tlayoutVertically: true,\n\t\t\t\t\tsize: new Size(\n\t\t\t\t\t\tcontainerbottom.size.width \/ newData.length,\n\t\t\t\t\t\tcontainerbottom.size.height\n\t\t\t\t\t),\n\t\t\t\t});\n\n\t\t\t\tObject.keys(item).forEach((k) => {\n\t\t\t\t\tconst row = col.addStack().myProxy({\n\t\t\t\t\t\tsize: new Size(\n\t\t\t\t\t\t\tcol.size.width,\n\t\t\t\t\t\t\tcol.size.height \/ Object.keys(item).length\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\n\t\t\t\t\tconst result = item[k];\n\n\t\t\t\t\tif (k === \"value\") {\n\t\t\t\t\t\tconst unit = item.title.includes(\"电量\") ? \"度\" : \"元\";\n\t\t\t\t\t\trow.myProxy({\n\t\t\t\t\t\t\tbottomAlignContent: true,\n\t\t\t\t\t\t\taddText: [\n\t\t\t\t\t\t\t\t(+result).toFixed(2),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttextColor: BillStyle.color,\n\t\t\t\t\t\t\t\t\tfont: BillStyle.mediumFont,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}).myProxy({\n\t\t\t\t\t\t\taddText: [\n\t\t\t\t\t\t\t\tunit,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttextColor: BillStyle.color,\n\t\t\t\t\t\t\t\t\tfont: BillStyle.smallFont,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.myProxy({\n\t\t\t\t\t\t\tcenterAlignContent: true,\n\t\t\t\t\t\t\taddText: [\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttextColor: BillStyle.color,\n\t\t\t\t\t\t\t\t\tfont: BillStyle.smallFont,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t});\n\n\/\/ 中型小组件\nconfig.mediumRender = (widget) => {\n\twidget.addStack().myProxy({\n\t\tlayoutVertically: true,\n\t\tsize: new Size(...config.familySize),\n\n\t\tcreateContainerTop,\n\t\tcreateContainerBottom,\n\t});\n};\n\n\/\/ 小型小组件\nconfig.smallRender = (widget) => {\n\twidget.addStack().myProxy({\n\t\tlayoutVertically: true,\n\t\tsize: new Size(...config.familySize),\n\n\t\taddTitleName,\n\t\t$: (widget) => addIcon(widget, widget.size.Width * 0.5),\n\n\t\taddBalance,\n\t\tsetRenderPaymentPage(widget) {\n\t\t\tconst w = widget.addStack();\n\t\t\tw.centerAlignContent();\n\t\t\tw.addSpacer(5);\n\t\t\tsetDate(w);\n\t\t\tw.addSpacer(27);\n\t\t},\n\t});\n};\n\nconst createWidget = (widget) => {\n\tconst screen = Device.screenResolution();\n\tconst size = phoneSize(screen.height);\n\tconst scale = Device.screenScale();\n\tconst family = config.widgetFamily;\n\n\tconst widthPX = family === \"large\" ? size.medium : size[family];\n\tconst heightPX = family === \"medium\" ? size.small : size[family];\n\n\tconst height = heightPX \/ scale;\n\tconst width = widthPX \/ scale;\n\tconfig.familySize = [width - 15, height - 15];\n\n\tconfig[family + \"Render\"](widget);\n};\n\nconst Gradient = ([light1, light2, dark1, dark2]) =>\n\tnew LinearGradient().myProxy({\n\t\tcolors: [\n\t\t\tColor.dynamic(new Color(light2), new Color(dark2)),\n\n\t\t\tColor.dynamic(new Color(light1), new Color(dark1)),\n\t\t],\n\t\tlocations: [0.05, 1],\n\t\tstartPoint: new Point(1, 1),\n\t});\n\nclass UIData {\n\tstatic fileName = \"settings.json\";\n\tstatic iCloudFM = useFileManager({ useICloud: true });\n\n\tstatic async create(url) {\n\t\tconst instance = new UIData();\n\t\tawait instance.fetchData(url);\n\t\treturn instance;\n\t}\n\n\tconstructor(data = null) {\n\t\tthis.update_interval = 6 * 3600000;\n\t\tthis.last_update_time = 0;\n\t\tthis.index = 0;\n\t\tthis.data = data;\n\t}\n\n\tget isUpdatable() {\n\t\tconst timeElapsed = Date.now() - this.last_update_time;\n\t\treturn timeElapsed >= this.update_interval;\n\t}\n\n\tasync fetchData(url) {\n\t\tconst cache = UIData.iCloudFM.readJSON(UIData.fileName) ?? {};\n\t\tObject.assign(this, cache);\n\n\t\tif (this.isUpdatable) {\n\t\t\tconst { body } = await http.get(url, 18).json();\n\n\t\t\tif (!body) throw new Error(\"请求失败,请安装模块 检查boxjs配置\");\n\n\t\t\tthis.last_update_time = Date.now();\n\t\t\tthis.data = body;\n\t\t}\n\t}\n\n\tseverData() {\n\t\tUIData.iCloudFM.writeJSON(UIData.fileName, this);\n\t}\n\n\tasync getData() {\n\t\tawait this.event();\n\t\tthis.updateIndex();\n\t\tthis.severData();\n\t\t\n\t\treturn this.data?.[this.index];\n\t}\n\n\tupdateIndex() {\n\t\tconst i = args.widgetParameter;\n\t\tif (!i) return;\n\t\tif (!this.data[i]) throw new Error(\"户号不存在\");\n\t\tthis.index = i;\n\t}\n\n\tasync event() {\n\t\tconst eventFunction = this[\"_api_\" + args.queryParameters.event];\n\n\t\tif (eventFunction) {\n\t\t\tawait eventFunction.call(this);\n\t\t}\n\t}\n\n\tasync _api_switchAcc() {\n\t\tconst options = this.data.map((item) => {\n\t\t\tconst { value: title } = item.find((i) => i.title === \"用户\");\n\t\t\treturn { title };\n\t\t});\n\n\t\tconst { value: index } = await presentSheet({\n\t\t\ttitle: \"户号\",\n\t\t\tmessage: \"请选择要展示的户号\",\n\t\t\toptions,\n\t\t\tcancelText: \"取消\",\n\t\t});\n\n\t\tif (index !== -1) this.index = index;\n\t}\n}\n\nconst uiData = await UIData.create(\n\t\"http:\/\/api.example.com\/electricity\/bill\/all\"\n);\n\nconst BillData = await uiData.getData();\n\nconst isOverdue = BillData.find(i => i.title === \"是否欠费\").value;\n\nnew ListWidget().myProxy({\n\t\/\/ 设置背景渐变\/\/ \n   backgroundGradient: Gradient([\"#FFF\", \"#FFF\", \"#0C0C0C\", \"#0C0C0C\"]),\n\t\/\/ 运行小组件\n\trun(widget) {\n\t\tif (config.runsInWidget) {\n\t\t\tcreateWidget(widget);\n\t\t\tScript.setWidget(widget);\n\t\t} else {\n\t\t\tconfig.widgetFamily = \"medium\";\n\t\t\tcreateWidget(widget);\n\t\t\twidget.presentMedium();\n\t\t}\n\n\t\tScript.complete();\n\t},\n});\n",
  "share_sheet_inputs" : [

  ]
}